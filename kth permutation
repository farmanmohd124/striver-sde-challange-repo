TC = O(N*N)
sc = O(N)

#include <bits/stdc++.h>
    // void permutationHelper(string & s, int index, vector < string > & res) {
    //   if (index == s.size()) {
    //     res.push_back(s);
    //     return;
    //   }
    //   for (int i = index; i < s.size(); i++) {
    //     swap(s[i], s[index]);
    //     permutationHelper(s, index + 1, res);
    //     swap(s[i], s[index]);
    //   }
    // }
string kthPermutation(int n, int k) {
    // string s;
    // for(int i =1 ; i<=n ;i++){
    //     s.push_back(i+'0');
    // }
    
    // for(int i =0 ; i<k-1 ; i++){
    //     next_permutation(s.begin() , s.end());

    // }
    // return s;
    // vector<string>res;
    
    //sort the generated permutations
    //  permutationHelper(s, 0, res);
    // sort(res.begin(), res.end());
    
    // return res[k-1];
    int fact = 1;
      vector < int > numbers;
      for (int i = 1; i < n; i++) {
        fact = fact * i;
        numbers.push_back(i);
      }
      numbers.push_back(n);
      string ans = "";
      k = k - 1;
      while (true) {
        ans = ans + to_string(numbers[k / fact]);
        numbers.erase(numbers.begin() + k / fact);
        if (numbers.size() == 0) {
          break;
        }

        k = k % fact;
        fact = fact / numbers.size();
      }
      return ans;



}
